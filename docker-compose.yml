version: "3"
name: "scamazon"

networks:
  my_network:
    driver: bridge

volumes:
  mongo-data:

services:
  product-catalog-service:
    build: ./backend
    # image: passwordnotsafe/produkt-catalog-service:master
    networks:
      - my_network
    ports:
      - "4005:4005"
    depends_on:
      mongo-product-catalog-service:
        condition: service_healthy
    environment:
      - SERVER_PORT=4005
      - DB_USERNAME=root
      - DB_PASSWORD=example
      - DB_HOST=mongo-product-catalog-service
      - DB_PORT=27017

  mongo-product-catalog-service:
    image: mongo
    restart: always
    networks:
      - my_network
    volumes:
      - ./mongo-data:/data/db
      - ./init/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    healthcheck:
      test: echo 'mongo-product-catalog-service.runCommand("ping").ok' | mongosh mongo-product-catalog-service:27017 --quiet
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 200s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: allProducts

  mongo-express-product-catalog-service:
    image: mongo-express
    restart: always
    ports:
      - 8084:8081
    networks:
      - my_network
    depends_on:
      mongo-product-catalog-service:
        condition: service_healthy
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo-product-catalog-service:27017/

  minio:
    image: quay.io/minio/minio:RELEASE.2022-02-18T01-50-10Z
    volumes:
      - ./data:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: "minio"
      MINIO_ROOT_PASSWORD: "minio123"
      MINIO_ADDRESS: ":9000"
      MINIO_CONSOLE_ADDRESS: ":9001"
    command: minio server /data
